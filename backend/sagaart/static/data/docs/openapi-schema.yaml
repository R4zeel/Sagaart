openapi: 3.0.3
info:
  version: "1.0.0"
  title: Онлайн-галерея Sagaart
servers:
  - url: localhost

paths: 
  /api/user/:
    post:
      tags: [Личный кабинет]
      summary: Регистрация пользователя.
      description: Создание личного кабинета пользователя. Вводными данными будут E-mail пользователя и пароль придуманный пользователем. 
      operationId: user_create
      requestBody:
        description: При регистрации пользователь вводит E-mail и пароль.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPost'
      responses:
        '201':
          description: Запрос клиента успешно выполнен, и в результате был создан один или несколько ресурсов.
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/UserPostResult'
        '400':
          description: Сервер не понимает запрос из-за неверного синтаксиса.
  /api/user/{id}/:
    get:
      tags: [Личный кабинет]
      summary: Получение данных личного кабинета пользователя.
      description: Получение информации по личному кабинету пользователя.
      operationId: user_retrieve
      parameters:
        - name: id
          in: path
          description: Уникальный идентификационный номер пользователя.
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: Запрос клиента успешно обработан.
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/UserInfo'
        '401':
          description: Для получения запрашиваемого ответа нужна аутентификация.
    patch:
      tags: [Личный кабинет]
      summary: Редактирование данных личного кабинета пользователя.
      description: Редактирование данных личного кабинета пользователя ФИО, телефон.
      operationId: user_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatch'
      parameters:
        - name: id
          in: path
          description: Уникальный идентификационный номер пользователя.
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: Запрос клиента успешно обработан.
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/UserPatchResult'
        '400':
          description: Сервер не понимает запрос из-за неверного синтаксиса.
        '401':
          description: Для получения запрашиваемого ответа нужна аутентификация.
  /api/user/emailpassword/:
    post:
      tags: [Личный кабинет]
      summary: Отправка электронного письма для восстановления пароля.
      operationId: user_emailpassword_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEmailPWD'
      responses:
        '200':
          description: Запрос клиента успешно обработан.
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/UserEmailPWD'
        '400':
          description: Сервер не понимает запрос из-за неверного синтаксиса.
  /api/user/resetpassword/{uid}/{token}/:
    post:
      tags: [Личный кабинет]
      summary: Восстановление пароля личного кабинета.
      description: Восстановление пароля от личного кабинета пользователя после перехода по ссылке в электронном письме.
      operationId: user_resetpassword_create
      parameters:
        - name: uid
          in: path
          description: Уникальный идентификационный номер пользователя.
          required: true
          schema:
            type: string
            format: int64
        - name: token
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPostPassword'
      responses:
        '204':
          description: Сервер успешно обработал запрос, но в ответе были переданы только заголовки без тела сообщения.
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/UserPostPassword'
        '400':
          description: Сервер не понимает запрос из-за неверного синтаксиса.
        '404':
          description: Запрашиваемый ресурс не найден.
  /api/user/token/login/:
    post:
      tags: [Личный кабинет]
      summary: Авторизация пользователя.
      description: Вход в личный кабинет пользователя по E-mail и пароль с созданием токена авторизации.
      operationId: user_token_login_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthTokenCreate'
      responses:
        '200':
          description: Запрос клиента успешно обработан.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthTokenGetResponse'
        '400':
          description: Сервер не понимает запрос из-за неверного синтаксиса.
  /api/user/token/logout/:
    post:
      tags: [Личный кабинет]
      summary: Выход из личного кабинета пользователя.
      operationId: user_token_logout_create
      responses:
        '200':
          description: Запрос клиента успешно обработан.         

  /api/feedback/:
    post:
      tags: [Обратная связь]
      summary: Форма обратной связи.
      description: Отправка формы обратной связи на корпоративные почты организации.
      operationId: feedback_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        '200':
          description: Запрос клиента успешно обработан.
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Feedback'
        '400':
          description: Сервер не понимает запрос из-за неверного синтаксиса.

  /api/product/:
    get:
      tags: [Каталог товаров искусств]
      summary: Список товаров искусств.
      description: Получение всего списка товаров искусств с возможностью поиска и фильтрации по определенным параметрам.
      operationId: product_list
      parameters:
        - name: search
          in: query
          required: false
          description: Поисковая строка по имени автора или имени товара искусства.
          schema:
           type: string
           example: Мона лиза
        - name: ordering
          required: false
          in: query
          schema:
           type: string
        - name: page
          required: false
          in: query
          schema:
           type: integer
        - name: limit
          required: false
          in: query
          schema:
            type: integer
        - name: offset
          required: false
          in: query
          schema:
            type: integer
        - name: category
          in: query
          required: false
          description: Категории товара 1 - Живопись, 2 - Графика, 3 - Фотография, 4 - Digital.
          schema:
            type: integer
            enum: [1,2,3,4]
        - name: style
          in: query
          required: false
          description: Стили товара 1 - Анималистика, 2 - Аллегорический, 3 - Батальный, 4 - Былинный, 5 - Бытовой, 6 - Ню, 7 - Религиозный.
          schema:
            type: integer
            enum: [1,2,3,4,5,6,7]
        - name: genre
          in: query
          required: false
          description: Жанры товара 1 - Абстракция, 2 - Минимализм, 3 - Экспрессионизм, 4 - Концептуальное искусство, 5 - Фигуративное искусство, 6 - Pop Art, 7 - Street Art, 8 - Интерьерное.
          schema:
            type: integer
            enum: [1,2,3,4,5,6,7,8]
        - name: size_category
          in: query
          description: Выбор размера товара искусства 1 - Любой, 2 - Small (до 40 см), 3 - Medium (40 - 100 см), 4 - Large (100 - 160 см), 5 - Oversize (более 160 см)
          required: false
          schema:
           type: integer
           enum: [1, 2, 3, 4, 5]
        - name: country
          in: query
          required: false
          description: Страна создания товара искусства.
          schema:
           type: string
           example: Испания
        - name: min_year
          in: query
          required: false
          description: Пользователь устанавливает диапазон годов создания товаров искусств, чтобы найти в этом промежутке, учитывая введеные года, нужные товары искусства. Первый год.
          schema:
            type: integer
            format: date
            description: Год создания товара
            example: 2001
        - name: max_year
          in: query
          required: false
          description: Пользователь устанавливает диапазон годов создания товаров искусств, чтобы найти в этом промежутке, учитывая введеные года, нужные товары искусства. Второй год.
          schema:
            type: integer
            format: date
            description: Год создания товара
            example: 2003
        - name: cost_category
          in: query
          description: Выбор категории цен товара искусства 1 - до 20 000 руб., 2 - от 20 000 до 50 000 руб., 3 - от 50 000 до 100 000 руб., 4 - от 100 000 до 200 000 руб., 5 - от 200 000 до 500 000 руб.
          required: false
          schema:
           type: integer
           enum: [1, 2, 3, 4, 5]
      responses:
        '200':
          description: Запрос клиента успешно обработан.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 2
                    description: 'Общее количество товаров искусств в базе'
                  next:
                    type: string
                    nullable: true
                    example: http://saagart.gallery/api/product/?page=3
                    description: 'Ссылка на следующую страницу каталога товаров искусств'
                  previous:
                    type: string
                    nullable: true
                    example: http://saagart.gallery/api/product/?page=1
                    description: 'Ссылка на предыдущую страницу каталога товаров искусств'
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductSearchArray"
                    description: 'Список объектов текущей страницы'
  /api/product/{id}/:
    get:
      tags: [Каталог товаров искусств]
      summary: Получение информации карточки товара искусств.
      operationId: product_retrieve
      parameters:
        - name: id
          in: path
          description: Уникальный идентификатор товара искусств.
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: Запрос клиента успешно обработан.
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Product'
        '404':
          description: Запрашиваемый ресурс не найден.  
  
  /api/user/{id}/subscribe/:
    post:
      tags: [Аналитика товаров искусств]
      summary: Приобретение подписки сайта пользователем. (заглушка)
      description: Процесс предоставления информации оплаты и перенаправление пользователя на сторонний сервис для оплаты подписки сайта. Написан с целью заглушки, так как в рамках Хакатона интегрирование API сервиса оплаты не предусматривается.
      operationId: posttusersubsctribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscribeBuy'
      parameters:
        - name: id
          in: path
          description: Уникальный идентификационный номер пользователя.
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: Запрос клиента успешно обработан.
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/UserSubscribeBuy'
        '401':
          description: Выполните вход в личный кабинет.
  /api/product/analytics/:
    post:
      tags: [Аналитика товаров искусств]
      summary: Создание заказа на аналитику/оценку товара искусства.
      description: Создание заказа на аналитику/оценку товара искусства с целью получения дополнительной информации о данном товаре. В результате с помощью данного алгоритма оценки заказчика будет предоставлена информация справедливая цена товара, выставки в которых участвовал автор, график изменения цены товара искусства, в каких коллекциях находится товар, упоминания товара в СМИ. 
      operationId: postanalytics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductAnalyticsOrder'
      responses:
        '200':
          description: Успешно отправлен товар искусства на аналитику.
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ProductAnalyticsOrder'
        '400':
          description: Указаны невалидные данные для заказа аналитики товара.
        '401':
          description: Выполните вход в личный кабинет.
  /api/user/{id}/analytics/:
    get:
      tags: [Аналитика товаров искусств]
      summary: История заказов аналитики товаров искусств.
      description: Получение истории заказов аналитики/оценки товара искусств в личном кабинете пользователя.
      operationId: getuseranalyticsarray
      parameters:
        - name: id
          in: path
          description: Уникальный идентификационный номер пользователя.
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: Успешная загрузка списка заказов аналитики товаров искусств.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAnalyticsListArray"
        '401':
          description: Выполните вход в личный кабинет.
  /api/user/{id}/analytics/{productanalytics_id}/:
    get:
      tags: [Аналитика товаров искусств]
      summary: Заказанная аналитика товара искусства.
      description: Получение всей информации об заказанной аналитике/оценке товара искусства.
      operationId: getuseranalytics
      parameters:
        - name: id
          in: path
          description: Уникальный идентификационный номер пользователя.
          required: true
          schema:
            type: string
            format: int64
        - name: productanalytics_id
          in: path
          description: Уникальный идентификационный номер пользователя.
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: Информация карточки товара искусств успешно отображена.
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ProductAnalyticsUser'
        '401':
          description: Выполните вход в личный кабинет.
        '404':
          description: Информация по товару искусств не найдена.    


components:
  schemas:
    UserInfo: #Схема для информации личного кабинета/пользователя.
      type: object
      required:
        - id
        - email
        - password
        - first_name
        - sur_name
        - middle_name
        - telephone
      properties:
        id:
          type: integer
          format: int64
          example: 1
        email:
          type: string
          description: Длина в 250 символов, обязательное присутствие символа @. Специальные символы . - 
          example: example@yandex.ru
        first_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иван
        sur_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иванов
        middle_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иванович
        telephone:
          type: string
          description: Длина 11 - 15 символов. Формат номера телефона +7
          example: +79012325312
        subcribe:
          $ref: '#/components/schemas/UserSubscribe'
    UserPost: #Схема для создания личного кабинета/пользователя.
      type: object
      required:
        - email
        - first_name
        - sur_name
        - middle_name
        - telephone
        - password
      properties:
        email:
          type: string
          description: Длина в 250 символов, обязательное присутствие символа @.Специальные символы . - 
          example: example@yandex.ru
        first_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иван
        sur_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иванов
        middle_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иванович
        telephone:
          type: string
          description: Длина 11 - 15 символов. Формат номера телефона +7
          example: +79012325312
        password:
          type: string
          description: Возможная длина пароля 8-25 символов, язык ENG, заглавные и прописные буквы A-Z, цифры 0-9, а также знак тире “-” и спец. символы.
          example: qwert12345
    UserPostResult: #Схема для создания личного кабинета/пользователя.
      type: object
      required:
        - email
        - first_name
        - sur_name
        - middle_name
        - telephone
      properties:
        email:
          type: string
          description: Длина в 250 символов, обязательное присутствие символа @.Специальные символы . - 
          example: example@yandex.ru
        first_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иван
        sur_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иванов
        middle_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иванович
        telephone:
          type: string
          description: Длина 11 - 15 символов. Формат номера телефона +7
          example: +79012325312
    UserPatch: #Схема для редактирования личного кабинета/пользователя.
      type: object
      required:
        - first_name
        - sur_name
        - middle_name
        - telephone
      properties:
        first_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иван
        sur_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иванов
        middle_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иванович
        telephone:
          type: string
          description: Длина 11 - 15 символов. Формат номера телефона +7
          example: +79012325312
    UserPatchResult: #Схема для редактирования личного кабинета/пользователя.
      type: object
      required:
        - email
        - first_name
        - sur_name
        - middle_name
        - telephone
        - subcribe
      properties:
        user_id:
          type: integer
          format: int64
          example: 1
        email:
          type: string
          description: Длина в 250 символов, обязательное присутствие символа @.Специальные символы . - 
          example: example@yandex.ru
        first_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иван
        sur_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иванов
        middle_name:
          type: string
          description: Длина в 50 символов, язык RUS, ENG.
          example: Иванович
        telephone:
          type: string
          description: Длина 11 - 15 символов. Формат номера телефона +7
          example: +79012325312
        subcribe:
          $ref: '#/components/schemas/UserSubscribe'
    UserEmailPWD: #Схема для отправки письма с целью восстановления пароля от личного кабинета.
      type: object
      required:
        - email
      properties:
        email:
          type: string
          description: Длина в 250 символов, обязательное присутствие символа @.Специальные символы . - 
          example: example@yandex.ru
    UserPostPassword: #Схема для изменения пароля личного кабинета пользователя.
      type: object
      required:
        - uid
        - token
        - new_password
        - re_new_passwrod
      properties:
        uid:
          type: integer
          format: int64
          example: 1
        token:
          type: string  
        new_password:
          type: string
          description: Возможная длина пароля 8-25 символов, язык ENG, заглавные и прописные буквы A-Z, цифры 0-9, а также знак тире “-” и спец. символы.
          example: qwert12345
        re_new_password:
          type: string
          description: Возможная длина пароля 8-25 символов, язык ENG, заглавные и прописные буквы A-Z, цифры 0-9, а также знак тире “-” и спец. символы.
          example: qwert12345э
    UserAuthTokenCreate: #Схема создания токена авторизации.
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: Длина в 250 символов, обязательное присутствие символа @.Специальные символы . - 
          example: example@yandex.ru
        password:
          type: string
          description: Возможная длина пароля 8-25 символов, язык ENG, заглавные и прописные буквы A-Z, цифры 0-9, а также знак тире “-” и спец. символы.
          example: qwert12345
    UserAuthTokenGetResponse: #Схема чтения токена авторизации.
      type: object
      required:
        - token
      properties:
        token:
          type: string
    UserSubscribe: #Базования схема по сущности "Подписка".
      type: object
      required:
        - tariff
        - cost
        - status
        - date_start
        - date_end
      properties:
         tariff:
          type: integer
          description: 1 - Тариф "Freelancer", 2 - Тариф "Professional", 3 - Тариф "Agency"
          enum:
            - 1
            - 2
            - 3
         cost:
          type: integer
          description: 1000 - Стоимость тарифа "Freelancer", 2000 - Стоимость тарифа "Professional", 3000 - Стоимость тарифа "Agency"
          enum:
            - 1000
            - 2000
            - 3000
         status:
          type: integer
          description: 0 - подписка отсутствует. 1 - подписка активна.
          enum:
            - 0
            - 1
         date_start:
          type: string
          format: date
          description: Дата начала подписки. При регистрации личного кабинета значение соответствует дате установленной на ПК.
          example: 01.01.2024
         date_end:
          type: string
          format: date
          description: Дата окончания подписки. При регистрации личного кабинета значение соответствует дате установленной на ПК.
          example: 01.01.2025
    UserSubscribeShort: #Вспомогательная схема краткой информации о подписке.
      type: object
      required:
        - tariff
        - cost
      properties:
         tariff:
          type: integer
          description: 1 - Тариф "Freelancer", 2 - Тариф "Professional", 3 - Тариф "Agency"
          enum:
            - 1
            - 2
            - 3
         cost:
          type: integer
          description: 1000 - Стоимость тарифа "Freelancer", 2000 - Стоимость тарифа "Professional", 3000 - Стоимость тарифа "Agency"
          enum:
            - 1000
            - 2000
            - 3000
    UserSubscribeBuy: #Схема для отправки информации в сторонний сервис оплаты подписки.
      type: object
      required:
        - user_id
        - subscribe
        - url_home
        - url_pay
      properties:
         user_id:
          type: integer
          format: int64
          example: 1
         subscribe:
          $ref: '#/components/schemas/UserSubscribeShort'
         url_home:
          type: string
          example: URL страницы на которую вернется пользователь после оплаты подписки на стороннем сервисе.
         url_pay:
          type: string
          example: URL страницы стороннего сервиса для оплаты подписки.
    Feedback: #Схема для формы обратной связи.
      type: object
      required:
        - user_mail
        - user_name
        - user_phone
        - feedback_message
      properties:
        user_mail:
          type: string
          description: Длина в 250 символов, обязательное присутствие символа @.Специальные символы . - 
          example: example@yandex.ru
        user_name:
          type: string
          description: Длина в 150 символов, язык RUS, ENG. 
          example: Иванов Иван Иванович
        user_phone:
          type: string
          description: Длина 11 - 15 символов. Формат номера телефона +7
          example: +79012325312
        feedback_message:
          type: string
          description: Описание вопроса/проблемы пользователя. Длина в 3000 символов.
    Product: #Базовая схема по сущности "Товар".
      type: object
      required:
        - id
        - name
        - image
        - category
        - style
        - genre
        - size_category
        - year
        - cost_category
        - author
        - is_published
      properties:
         id:
          type: integer
          format: int64
          example: 1
         name:
          type: string
          example: Мона Лиза
         image:
          type: string
          example: Reference/URL подгруженного изображения товара искусств.
         additional_image:
          type: string
          example: Reference/URL подгруженного изображения товара искусств.
         category:
          $ref: '#/components/schemas/ProductCategory'
         style:
          $ref: '#/components/schemas/ProductStyle'
         genre:
          $ref: '#/components/schemas/ProductGenre'
         size_category:
          type: integer
          description: Выбор размера товара искусства 1 - Любой, 2 - Small (до 40 см), 3 - Medium (40 - 100 см), 4 - Large (100 - 160 см), 5 - Oversize (более 160 см)
          enum:
            - 1
            - 2 
            - 3 
            - 4 
            - 5 
         size:
          type: string
          example: 40.6 × 60.1
         country:
          type: string
          example: Испания
         city_sale:
          type: string
          description: Город продажи товара искусства.
          example: Москва
         year:
          type: string
          format: date
          description: Год создания товара
          example: 01.01.2001
         material:
          type: string
          example: Акриловые краски
         tablet_material:
          type: string
          example: Холст
         collection:
          type: string
          example: Коллекция Путина, Коллекция Пушкина.
         media:
          type: string
          description: Упоминания в СМИ.
          example: На Первом канале.
         description:
          type: string
          example: На картине изображена по пояс молодая женщина по имени Лиза Герардини. Считается, что портрет заказал её муж, Франческо дель Джокондо, поэтому изображённую даму также называют Джокондой. «Мона Лиза» буквально означает «Госпожа Лиза».
         cost_category:
          type: integer
          description: Выбор категории цен товара искусства 1 - до 20 000 руб., 2 - от 20 000 до 50 000 руб., 3 - от 50 000 до 100 000 руб., 4 - от 100 000 до 200 000 руб., 5 - от 200 000 до 500 000 руб.
          enum: 
            - 1
            - 2
            - 3
            - 4
            - 5
         end_cost:
          type: integer
          description: Итоговая цена товара, которая будет отображена на карточке товара.
          example: 1000
         fair_cost:
          type: string
          description: Желаемая цена товара, которая будет отображена в описании карточки товара.
          example: 1000 - 2000
         is_published:
          type: integer
          enum: 
            - 0
            - 1
         author:
          $ref: '#/components/schemas/ProductAuthor'
         similar_works:
          $ref: '#/components/schemas/SimilarProductArray'
         author_works:
          $ref: '#/components/schemas/AuthorProductArray'
    SimilarProduct:
      type: object
      required:
        - id
        - name
      properties:
         id:
          type: integer
          format: int64
          example: 1
         image:
          type: string
          example: Reference/URL подгруженного изображения товара искусств.
    SimilarProductArray: #Схема для отображения всех товаров искусств в каталоге.
      type: array
      items: 
          $ref: '#/components/schemas/SimilarProduct'
    AuthorProduct:
      type: object
      required:
        - id
        - name
      properties:
         id:
          type: integer
          format: int64
          example: 1
         image:
          type: string
          example: Reference/URL подгруженного изображения товара искусств.
    AuthorProductArray: #Схема для отображения всех товаров искусств в каталоге.
      type: array
      items: 
          $ref: '#/components/schemas/AuthorProduct'
    ProductAuthor: #Базовая схема по сущности "Автор".
      type: object
      required:
        - id
        - name
        - personal_style
      properties:
         id:
          type: integer
          format: int64
          example: 1
         name:
          type: string
          example: Леонардо да Винчи
         description:
          type: string
          example: Леонардо да Винчи (Леонардо ди сер Пьеро да Винчи) (1452–1519 гг.) – величайший итальянский художник, сделавший огромный вклад в искусство Высокого Возрождения, гениальный ученый, изобретатель, мыслитель, музыкант, ярчайший пример «универсального человека».
         gender:
          type: integer
          description: Выбор пола автора. 1 - Мужской, 2 - Женский.
          enum:
            - 1
            - 2 
         age:
          type: string
          description: Возраст
          example: 92 года.
         year_of_birth:
          type: string
          format: date
          description: Год рождения
          example: 01.01.1452
         show:
          $ref: '#/components/schemas/ProductAuthorShow'
         awards:
          $ref: '#/components/schemas/ProductAuthorAchievement'
         city_of_birth:
          type: string
          description: Город рождения автора товара искусства.
          example: Селение Анкиано, около городка Винчи, близ Флоренции.
         city_live:
          type: string
          description: Город проживания автора товара искусств.
          example: Кло-Люсе, Амбуаз, Турень, Королевство Франция.
         education:
          type: string
          description: Образование автора товара искусства.
          example: Инженер, астроном, философ, анатом, математик, скульптор.
         professional_education:
          type: string
          description: Художественное образование автора товара искусства.
          example: Художник. Учеба в мастерской Андреа Верроккьо.
         teaching_experience:
          type: string
          description: Опыт преподавания автора товара искусства.
          example: Свой многолетний опыт воспитания молодых живописцев прославленный мастер обобщил в ряде практических рекомендаций в мастерской Леонардо.
         personal_style:
          type: string
          description: Персональный стиль автора товара искусства.
          example: Реализм
         social:
          type: string
          description: Социальные сети автора товара искусства
    ProductAuthorShow: #Базовая схема по сущности "Выставки автора".
      type: object
      required:
        - id
        - name
        - year
        - place
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Галерея Артемида, совместная выставка.
        place:
          type: string
          example: Париж
        cost:
          type: integer
          example: 1000
        year:
          type: string
          example: 2001
    ProductAuthorAchievement: #Базовая схема по сущности "Награды автора".
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Лауреат Московской арт премии.
    ProductCategory: #Базовая схема по сущности "Категория".
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Категория товара 1 - Живопись, 2 - Графика, 3 - Фотография, 4 - Digital.
          enum:
            - 1
            - 2 
            - 3
            - 4
        name:
          type: string
          example: Живопись
    ProductStyle: #Базовая схема по сущности "Стиль".
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Стили товара 1 - Абстракция, 2 - Минимализм, 3 - Экспрессионизм, 4 - Концептуальное искусство, 5 - Фигуративное искусство, 6 - Pop Art, 7 - Street Art, 8 - Интерьерное.
          enum:
            - 1
            - 2 
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
        name:
          type: string
          example: Абстракция
    ProductGenre: #Базовая схема по сущности "Жанр".
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Жанры товара 1 - Анималистика, 2 - Аллегорический, 3 - Батальный, 4 - Былинный, 5 - Бытовой, 6 - Ню, 7 - Религиозный.
          enum:
            - 1
            - 2 
            - 3
            - 4
            - 5
            - 6
            - 7
        name:
          type: string
          example: Анималистикаа
    ProductSearch: #Схема для поиска товаров искусств. Данная схема учитывает фильтрацию товаров искусств.
      type: object
      required:
        - id
        - name
        - image
        - category
        - style
        - genre
        - size_category
        - year
        - cost_category
        - author
        - analytics
      properties:
         id:
          type: integer
          format: int64
          example: 1
         name:
          type: string
          example: Мона Лиза
         image:
          type: string
          example: Reference/URL подгруженного изображения товара искусств.
         additional_image:
          type: string
          example: Reference/URL подгруженного изображения товара искусств.
         category:
          $ref: '#/components/schemas/ProductCategory'
         style:
          $ref: '#/components/schemas/ProductStyle'
         genre:
          $ref: '#/components/schemas/ProductGenre'
         size_category:
          type: integer
          description: Выбор размера товара искусства 1 - Любой, 2 - Small (до 40 см), 3 - Medium (40 - 100 см), 4 - Large (100 - 160 см), 5 - Oversize (более 160 см)
          enum:
            - 1
            - 2 
            - 3 
            - 4 
            - 5 
         size:
          type: string
          example: 40.6 × 40.6 см
         country:
          type: string
          example: Испания
         city_sale:
          type: string
          description: Город продажи товара искусства.
          example: Москва
         year:
          type: string
          format: date
          description: Год создания товара
          example: 01.01.2001
         cost_category:
          type: integer
          description: Выбор категории цен товара искусства 1 - до 20 000 руб., 2 - от 20 000 до 50 000 руб., 3 - от 50 000 до 100 000 руб., 4 - от 100 000 до 200 000 руб., 5 - от 200 000 до 500 000 руб.
          enum: 
            - 1
            - 2
            - 3
            - 4
            - 5
         end_cost:
          type: integer
          example: 2000
         is_published:
          type: integer
          enum: 
            - 0
            - 1
         author:
          $ref: '#/components/schemas/ProductAuthorShort'
    ProductSearchArray: #Схема для отображения всех товаров искусств в каталоге.
      type: array
      items: 
          $ref: '#/components/schemas/ProductSearch'
    ProductAuthorShort: #Схема для вывода краткой информации по автору товара искусства.
      type: object
      required:
        - id
        - name
      properties:
         id:
          type: integer
          format: int64
          example: 1
         name:
          type: string
          example: Леонардо да Винчи
    ProductAnalyticsDiagram: #Базовая схема по сущности "Цены товара".
      type: object
      required:
        - id
        - name
        - cost
        - year
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Галерея Артемида, совместная выставка.
        cost:
          type: integer
          example: 1000
        year:
          type: string
          example: 2001







    ProductAnalytics: #Схема для отображения информации аналитики на карточке товара.
      type: object
      required:
        - id
        - cost
        - collection
        - cm
      properties:
         id:
          type: integer
          format: int64
          example: 1
         cost:
          type: string
          description: Рассчитанная цена товара искусства алгоритмом заказчика (может быть диапозоном).
          example: 29000 - 31000

         date:
          type: string
          format: date
          description: Дата заказанной аналитики.
          example: 20.01.2001
         diagram:
          $ref: '#/components/schemas/ProductAnalyticsDiagram'
    ProductAnalyticsOrder: #Схема для создания заказа аналитики товара искусства.
      type: object
      required:
        - productAuthor_name
        - productAuthor_sex
        - productAuthor_age
        - productAuthor_city_live
        - product_name
        - product_jpeg
        - product_category
        - product_style
        - product_genre
        - product_size
        - product_material1
        - product_material2
        - product_year
        - product_city_sale
      properties:
         productAuthor_name:
          type: string
          description: Имя/псевдоним автора товара искусств.
          example: Винсент Ван Гог
         productAuthor_sex:
          type: integer
          description: Выбор пола автора. 1 - Мужской, 2 - Женский.
          enum:
            - 1
            - 2 
         productAuthor_age:
          type: string
          description: Возраст автора товара искусства.
          example: 18 лет
         productAuthor_city_live:
          type: string
          description: Город проживания автора товара искусства.
          example: Зюндерт
         product_name:
          type: string
          description: Наименование товара искусства.
          example: Подсолнухи
         product_jpeg:
          type: string
          example: Reference/URL подгруженного изображения товара искусств.
         product_category:
          $ref: '#/components/schemas/ProductCategory'
         product_style:
          $ref: '#/components/schemas/ProductStyle'
         product_genre:
          $ref: '#/components/schemas/ProductGenre'
         product_size:
          type: string
          example: 40.6 × 40.6 см
         product_material1:
          type: string
          example: Акриловые краски
         product_material2:
          type: string
          example: Холст
         product_year:
          type: string
          description: Год создания товара искусства.
          example: 2010
         product_city_sale:
          type: string
          description: Город продажи товара искусства.
          example: Москва
    ProductAnalyticsInfo: #Схема для отображения информации по товару искусства в карточке заказанной аналитики.
      type: object
      required:
        - product_name
        - product_category
        - product_style
        - product_genre
        - product_size
        - product_material1
        - product_material2
        - product_year
        - product_city_sale
      properties:
         product_name:
          type: string
          description: Наименование товара искусства.
          example: Подсолнухи
         product_category:
          $ref: '#/components/schemas/ProductCategory'
         product_style:
          $ref: '#/components/schemas/ProductStyle'
         product_genre:
          $ref: '#/components/schemas/ProductGenre'
         product_size:
          type: string
          example: 40.6 × 40.6 см
         product_material1:
          type: string
          example: Акриловые краски
         product_material2:
          type: string
          example: Холст
         product_year:
          type: string
          description: Год создания товара искусства.
          example: 2010
         product_city_sale:
          type: string
          description: Город продажи товара искусства.
          example: Москва
    ProductAnalyticsAuthor: # Схема краткой информации об авторе товара искусства для списка заказов аналитики.
      type: object
      required:
        - productAuthor_name
        - productAuthor_sex
        - productAuthor_age
        - productAuthor_city_live
      properties:
         productAuthor_name:
          type: string
          description: Имя/псевдоним автора товара искусств.
          example: Винсент Ван Гог
         productAuthor_sex:
          type: integer
          description: Выбор пола автора. 1 - Мужской, 2 - Женский.
          enum:
            - 1
            - 2 
         productAuthor_age:
          type: string
          description: Возраст автора товара искусства.
          example: 18 лет
         productAuthor_city_live:
          type: string
          description: Город проживания автора товара искусства.
          example: Зюндерт
         productAuthor_show:
          $ref: '#/components/schemas/ProductAuthorShow'   
    ProductAnalyticsShort: # Схема краткой информации о полученной аналитике товара искусства.
      type: object
      required:
        - productAnalytics_id
        - productAnalytic_date
      properties:
         productAnalytics_id:
          type: integer
          format: int64
          example: 1
         productAnalytic_date:
          type: string
          format: date
          description: Дата заказанной аналитики.
          example: 2001
    ProductShort: #Схема краткой информации о товаре искусства для истории аналитики.
      type: object
      required:
        - product_id
        - product_name
      properties:
         product_id:
          type: integer
          format: int64
          example: 1
         product_name:
          type: string
          description: Наименование товара искусства.
          example: Подсолнухи
    ProductAnalyticsList: #Схема для отображения заказов аналитики товаров в личном кабинете.
      type: object
      required:
        - user_id
        - productAnalytic
        - productAuthor
      properties:
         user_id:
          type: integer
          format: int64
          example: 1
         productAnalytics:
          $ref: '#/components/schemas/ProductShort'
         productAuthor:
          $ref: '#/components/schemas/ProductAuthorShort'
    ProductAnalyticsListArray: #Схема для списка заказов аналитики товаров искусств в личном кабинете.
      type: array
      items: 
          $ref: '#/components/schemas/ProductAnalyticsList'
    ProductAnalyticsUser: #Схема результата аналитики товаров искусства в личном кабинете.
      type: object
      required:
        - user_id
      properties:
         user_id:
          type: integer
          format: int64
          example: 1
         product:
          $ref: '#/components/schemas/ProductAnalyticsInfo'
         product_author:
          $ref: '#/components/schemas/ProductAnalyticsAuthor'
         product_analytics:
          $ref: '#/components/schemas/ProductAnalytics'
